// Code generated by protoc-gen-go. DO NOT EDIT.
// source: turing-machine.proto

/*
Package turing_machine is a generated protocol buffer package.

Data model for the Turing Machine.

It is generated from these files:
	turing-machine.proto

It has these top-level messages:
	InitializeRequest
	Empty
	Halted
	Run
	TuringMachine
*/
package turing_machine

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Move the head one cell to the left or right
type TuringMachine_TransitionFunction_Delta_Output_HeadMove int32

const (
	TuringMachine_TransitionFunction_Delta_Output_HeadMove_LEFT  TuringMachine_TransitionFunction_Delta_Output_HeadMove = 0
	TuringMachine_TransitionFunction_Delta_Output_HeadMove_RIGHT TuringMachine_TransitionFunction_Delta_Output_HeadMove = 1
)

var TuringMachine_TransitionFunction_Delta_Output_HeadMove_name = map[int32]string{
	0: "HeadMove_LEFT",
	1: "HeadMove_RIGHT",
}
var TuringMachine_TransitionFunction_Delta_Output_HeadMove_value = map[string]int32{
	"HeadMove_LEFT":  0,
	"HeadMove_RIGHT": 1,
}

func (x TuringMachine_TransitionFunction_Delta_Output_HeadMove) String() string {
	return proto.EnumName(TuringMachine_TransitionFunction_Delta_Output_HeadMove_name, int32(x))
}
func (TuringMachine_TransitionFunction_Delta_Output_HeadMove) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{4, 1, 0, 1, 0}
}

type InitializeRequest struct {
	// The string with which the tape shall be initialized. The
	// leftmost symbol will be at tape coordinateÂ 0.
	TapeContent string `protobuf:"bytes,1,opt,name=tape_content,json=tapeContent" json:"tape_content,omitempty"`
}

func (m *InitializeRequest) Reset()                    { *m = InitializeRequest{} }
func (m *InitializeRequest) String() string            { return proto.CompactTextString(m) }
func (*InitializeRequest) ProtoMessage()               {}
func (*InitializeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *InitializeRequest) GetTapeContent() string {
	if m != nil {
		return m.TapeContent
	}
	return ""
}

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// The Turing Machine has halted. This means that there is no
// transition rule for the current state and tape symbol.
type Halted struct {
	// The state of the control unit in which the machine has
	// halted.
	State uint32 `protobuf:"varint,1,opt,name=state" json:"state,omitempty"`
}

func (m *Halted) Reset()                    { *m = Halted{} }
func (m *Halted) String() string            { return proto.CompactTextString(m) }
func (*Halted) ProtoMessage()               {}
func (*Halted) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Halted) GetState() uint32 {
	if m != nil {
		return m.State
	}
	return 0
}

// Start the Turing Machine operation.
type Run struct {
}

func (m *Run) Reset()                    { *m = Run{} }
func (m *Run) String() string            { return proto.CompactTextString(m) }
func (*Run) ProtoMessage()               {}
func (*Run) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

// State data and configuration of a Turing Machine.
type TuringMachine struct {
	// Position of tape read/write head.
	HeadPosition int64 `protobuf:"varint,1,opt,name=head_position,json=headPosition" json:"head_position,omitempty"`
	// Current state of the control unit.
	//
	// The initial state is 0.
	State              uint32                            `protobuf:"varint,2,opt,name=state" json:"state,omitempty"`
	Tape               *TuringMachine_Tape               `protobuf:"bytes,3,opt,name=tape" json:"tape,omitempty"`
	TransitionFunction *TuringMachine_TransitionFunction `protobuf:"bytes,4,opt,name=transition_function,json=transitionFunction" json:"transition_function,omitempty"`
}

func (m *TuringMachine) Reset()                    { *m = TuringMachine{} }
func (m *TuringMachine) String() string            { return proto.CompactTextString(m) }
func (*TuringMachine) ProtoMessage()               {}
func (*TuringMachine) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *TuringMachine) GetHeadPosition() int64 {
	if m != nil {
		return m.HeadPosition
	}
	return 0
}

func (m *TuringMachine) GetState() uint32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *TuringMachine) GetTape() *TuringMachine_Tape {
	if m != nil {
		return m.Tape
	}
	return nil
}

func (m *TuringMachine) GetTransitionFunction() *TuringMachine_TransitionFunction {
	if m != nil {
		return m.TransitionFunction
	}
	return nil
}

// The contents of the tape.
// The contents of the tape.
type TuringMachine_Tape struct {
	Cell []*TuringMachine_Tape_Cell `protobuf:"bytes,1,rep,name=cell" json:"cell,omitempty"`
}

func (m *TuringMachine_Tape) Reset()                    { *m = TuringMachine_Tape{} }
func (m *TuringMachine_Tape) String() string            { return proto.CompactTextString(m) }
func (*TuringMachine_Tape) ProtoMessage()               {}
func (*TuringMachine_Tape) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 0} }

func (m *TuringMachine_Tape) GetCell() []*TuringMachine_Tape_Cell {
	if m != nil {
		return m.Cell
	}
	return nil
}

// List of non-blank cells.
// List of non-blank cells.
type TuringMachine_Tape_Cell struct {
	// Coordinate (index) of the tape cell.
	Coord int64 `protobuf:"varint,1,opt,name=coord" json:"coord,omitempty"`
	// Symbol appearing in the tape cell.
	//
	// Blank (empty string) is not allowed here because the
	// 'cell' list only contains non-blank cells.
	Symbol string `protobuf:"bytes,2,opt,name=symbol" json:"symbol,omitempty"`
}

func (m *TuringMachine_Tape_Cell) Reset()                    { *m = TuringMachine_Tape_Cell{} }
func (m *TuringMachine_Tape_Cell) String() string            { return proto.CompactTextString(m) }
func (*TuringMachine_Tape_Cell) ProtoMessage()               {}
func (*TuringMachine_Tape_Cell) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 0, 0} }

func (m *TuringMachine_Tape_Cell) GetCoord() int64 {
	if m != nil {
		return m.Coord
	}
	return 0
}

func (m *TuringMachine_Tape_Cell) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

// The Turing Machine is configured by specifying the
// transition function.
// The Turing Machine is configured by specifying the
// transition function.
type TuringMachine_TransitionFunction struct {
	Delta []*TuringMachine_TransitionFunction_Delta `protobuf:"bytes,1,rep,name=delta" json:"delta,omitempty"`
}

func (m *TuringMachine_TransitionFunction) Reset()         { *m = TuringMachine_TransitionFunction{} }
func (m *TuringMachine_TransitionFunction) String() string { return proto.CompactTextString(m) }
func (*TuringMachine_TransitionFunction) ProtoMessage()    {}
func (*TuringMachine_TransitionFunction) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{4, 1}
}

func (m *TuringMachine_TransitionFunction) GetDelta() []*TuringMachine_TransitionFunction_Delta {
	if m != nil {
		return m.Delta
	}
	return nil
}

// The list of transition rules.
// The list of transition rules.
type TuringMachine_TransitionFunction_Delta struct {
	Input *TuringMachine_TransitionFunction_Delta_Input `protobuf:"bytes,1,opt,name=input" json:"input,omitempty"`
	// An arbitrary label of the transition rule.
	Label  string                                         `protobuf:"bytes,2,opt,name=label" json:"label,omitempty"`
	Output *TuringMachine_TransitionFunction_Delta_Output `protobuf:"bytes,3,opt,name=output" json:"output,omitempty"`
}

func (m *TuringMachine_TransitionFunction_Delta) Reset() {
	*m = TuringMachine_TransitionFunction_Delta{}
}
func (m *TuringMachine_TransitionFunction_Delta) String() string { return proto.CompactTextString(m) }
func (*TuringMachine_TransitionFunction_Delta) ProtoMessage()    {}
func (*TuringMachine_TransitionFunction_Delta) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{4, 1, 0}
}

func (m *TuringMachine_TransitionFunction_Delta) GetInput() *TuringMachine_TransitionFunction_Delta_Input {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *TuringMachine_TransitionFunction_Delta) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *TuringMachine_TransitionFunction_Delta) GetOutput() *TuringMachine_TransitionFunction_Delta_Output {
	if m != nil {
		return m.Output
	}
	return nil
}

// Input parameters (arguments) of the transition rule.
// Input parameters (arguments) of the transition rule.
type TuringMachine_TransitionFunction_Delta_Input struct {
	// Current state of the control unit.
	State uint32 `protobuf:"varint,1,opt,name=state" json:"state,omitempty"`
	// Symbol read from the tape cell.
	Symbol string `protobuf:"bytes,2,opt,name=symbol" json:"symbol,omitempty"`
}

func (m *TuringMachine_TransitionFunction_Delta_Input) Reset() {
	*m = TuringMachine_TransitionFunction_Delta_Input{}
}
func (m *TuringMachine_TransitionFunction_Delta_Input) String() string {
	return proto.CompactTextString(m)
}
func (*TuringMachine_TransitionFunction_Delta_Input) ProtoMessage() {}
func (*TuringMachine_TransitionFunction_Delta_Input) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{4, 1, 0, 0}
}

func (m *TuringMachine_TransitionFunction_Delta_Input) GetState() uint32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *TuringMachine_TransitionFunction_Delta_Input) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

// Output values of the transition rule.
// Output values of the transition rule.
type TuringMachine_TransitionFunction_Delta_Output struct {
	HeadMove TuringMachine_TransitionFunction_Delta_Output_HeadMove `protobuf:"varint,1,opt,name=head_move,json=headMove,enum=turing_machine.TuringMachine_TransitionFunction_Delta_Output_HeadMove" json:"head_move,omitempty"`
	// New state of the control unit. If this leaf is not
	// present, the state doesn't change.
	State uint32 `protobuf:"varint,2,opt,name=state" json:"state,omitempty"`
	// Symbol to be written to the tape cell. If this leaf is
	// not present, the symbol doesn't change.
	Symbol string `protobuf:"bytes,3,opt,name=symbol" json:"symbol,omitempty"`
}

func (m *TuringMachine_TransitionFunction_Delta_Output) Reset() {
	*m = TuringMachine_TransitionFunction_Delta_Output{}
}
func (m *TuringMachine_TransitionFunction_Delta_Output) String() string {
	return proto.CompactTextString(m)
}
func (*TuringMachine_TransitionFunction_Delta_Output) ProtoMessage() {}
func (*TuringMachine_TransitionFunction_Delta_Output) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{4, 1, 0, 1}
}

func (m *TuringMachine_TransitionFunction_Delta_Output) GetHeadMove() TuringMachine_TransitionFunction_Delta_Output_HeadMove {
	if m != nil {
		return m.HeadMove
	}
	return TuringMachine_TransitionFunction_Delta_Output_HeadMove_LEFT
}

func (m *TuringMachine_TransitionFunction_Delta_Output) GetState() uint32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *TuringMachine_TransitionFunction_Delta_Output) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func init() {
	proto.RegisterType((*InitializeRequest)(nil), "turing_machine.InitializeRequest")
	proto.RegisterType((*Empty)(nil), "turing_machine.Empty")
	proto.RegisterType((*Halted)(nil), "turing_machine.Halted")
	proto.RegisterType((*Run)(nil), "turing_machine.Run")
	proto.RegisterType((*TuringMachine)(nil), "turing_machine.TuringMachine")
	proto.RegisterType((*TuringMachine_Tape)(nil), "turing_machine.TuringMachine.Tape")
	proto.RegisterType((*TuringMachine_Tape_Cell)(nil), "turing_machine.TuringMachine.Tape.Cell")
	proto.RegisterType((*TuringMachine_TransitionFunction)(nil), "turing_machine.TuringMachine.TransitionFunction")
	proto.RegisterType((*TuringMachine_TransitionFunction_Delta)(nil), "turing_machine.TuringMachine.TransitionFunction.Delta")
	proto.RegisterType((*TuringMachine_TransitionFunction_Delta_Input)(nil), "turing_machine.TuringMachine.TransitionFunction.Delta.Input")
	proto.RegisterType((*TuringMachine_TransitionFunction_Delta_Output)(nil), "turing_machine.TuringMachine.TransitionFunction.Delta.Output")
	proto.RegisterEnum("turing_machine.TuringMachine_TransitionFunction_Delta_Output_HeadMove", TuringMachine_TransitionFunction_Delta_Output_HeadMove_name, TuringMachine_TransitionFunction_Delta_Output_HeadMove_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for TuringMachineService service

type TuringMachineServiceClient interface {
	Initialize(ctx context.Context, in *InitializeRequest, opts ...grpc.CallOption) (*Empty, error)
}

type turingMachineServiceClient struct {
	cc *grpc.ClientConn
}

func NewTuringMachineServiceClient(cc *grpc.ClientConn) TuringMachineServiceClient {
	return &turingMachineServiceClient{cc}
}

func (c *turingMachineServiceClient) Initialize(ctx context.Context, in *InitializeRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/turing_machine.TuringMachineService/Initialize", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TuringMachineService service

type TuringMachineServiceServer interface {
	Initialize(context.Context, *InitializeRequest) (*Empty, error)
}

func RegisterTuringMachineServiceServer(s *grpc.Server, srv TuringMachineServiceServer) {
	s.RegisterService(&_TuringMachineService_serviceDesc, srv)
}

func _TuringMachineService_Initialize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitializeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TuringMachineServiceServer).Initialize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/turing_machine.TuringMachineService/Initialize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TuringMachineServiceServer).Initialize(ctx, req.(*InitializeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TuringMachineService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "turing_machine.TuringMachineService",
	HandlerType: (*TuringMachineServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Initialize",
			Handler:    _TuringMachineService_Initialize_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "turing-machine.proto",
}

func init() { proto.RegisterFile("turing-machine.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 499 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x94, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0x31, 0xfe, 0xd3, 0x66, 0xd2, 0x44, 0xed, 0x10, 0x50, 0xe4, 0x03, 0x4a, 0xcd, 0x81,
	0x5c, 0xb0, 0xc0, 0x40, 0x2e, 0xc0, 0xa9, 0x34, 0x24, 0x52, 0x2b, 0xd0, 0x12, 0xae, 0x58, 0x1b,
	0x7b, 0x21, 0x96, 0x9c, 0x5d, 0xe3, 0xac, 0x23, 0x85, 0x27, 0xe1, 0x45, 0x78, 0x0d, 0xc4, 0x23,
	0xa1, 0xdd, 0x75, 0x9a, 0xa6, 0x51, 0x55, 0xd1, 0xde, 0x3c, 0x9f, 0x76, 0x7e, 0xdf, 0x37, 0x9b,
	0xcd, 0x40, 0x47, 0x56, 0x65, 0xc6, 0xbf, 0x3f, 0x9b, 0xd3, 0x64, 0x96, 0x71, 0x16, 0x16, 0xa5,
	0x90, 0x02, 0xdb, 0x46, 0x8d, 0x6b, 0x35, 0x18, 0xc0, 0xd1, 0x98, 0x67, 0x32, 0xa3, 0x79, 0xf6,
	0x93, 0x11, 0xf6, 0xa3, 0x62, 0x0b, 0x89, 0xc7, 0x70, 0x20, 0x69, 0xc1, 0xe2, 0x44, 0x70, 0xc9,
	0xb8, 0xec, 0x5a, 0x3d, 0xab, 0xdf, 0x20, 0x4d, 0xa5, 0x9d, 0x18, 0x29, 0xd8, 0x03, 0xf7, 0x74,
	0x5e, 0xc8, 0x55, 0xf0, 0x18, 0xbc, 0x11, 0xcd, 0x25, 0x4b, 0xb1, 0x03, 0xee, 0x42, 0x52, 0xc9,
	0xf4, 0xf1, 0x16, 0x31, 0x45, 0xe0, 0x82, 0x4d, 0x2a, 0x1e, 0xfc, 0xda, 0x83, 0xd6, 0x44, 0x5b,
	0x9f, 0x1b, 0x67, 0x7c, 0x02, 0xad, 0x19, 0xa3, 0x69, 0x5c, 0x88, 0x45, 0x26, 0x33, 0xc1, 0x75,
	0x9b, 0x4d, 0x0e, 0x94, 0xf8, 0xa9, 0xd6, 0x36, 0xcc, 0xfb, 0x97, 0x98, 0x38, 0x00, 0x47, 0x65,
	0xe9, 0xda, 0x3d, 0xab, 0xdf, 0x8c, 0x82, 0x70, 0x7b, 0xa6, 0x70, 0xcb, 0x27, 0x9c, 0xd0, 0x82,
	0x11, 0x7d, 0x1e, 0x29, 0x3c, 0x90, 0x25, 0xe5, 0x86, 0x1d, 0x7f, 0xab, 0x78, 0xa2, 0x8d, 0x1d,
	0x8d, 0x79, 0x7e, 0x03, 0xe6, 0xa2, 0x71, 0x58, 0xf7, 0x11, 0x94, 0x3b, 0x9a, 0xbf, 0x02, 0x47,
	0x19, 0xe2, 0x1b, 0x70, 0x12, 0x96, 0xe7, 0x5d, 0xab, 0x67, 0xf7, 0x9b, 0xd1, 0xd3, 0x9b, 0x23,
	0x86, 0x27, 0x2c, 0xcf, 0x89, 0x6e, 0xf2, 0x5f, 0x81, 0xa3, 0x2a, 0x35, 0x7d, 0x22, 0x44, 0x99,
	0xd6, 0x57, 0x63, 0x0a, 0x7c, 0x04, 0xde, 0x62, 0x35, 0x9f, 0x8a, 0x5c, 0x5f, 0x4a, 0x83, 0xd4,
	0x95, 0xff, 0xdb, 0x01, 0xdc, 0x4d, 0x89, 0x67, 0xe0, 0xa6, 0x2c, 0x97, 0xb4, 0x8e, 0x32, 0xf8,
	0xdf, 0x31, 0xc3, 0xf7, 0xaa, 0x9b, 0x18, 0x88, 0xff, 0xd7, 0x06, 0x57, 0x0b, 0x48, 0xc0, 0xcd,
	0x78, 0x51, 0x99, 0xd7, 0xd1, 0x8c, 0xde, 0xde, 0x8e, 0x1b, 0x8e, 0x15, 0x83, 0x18, 0x94, 0x1a,
	0x38, 0xa7, 0x53, 0xb6, 0x9e, 0xcc, 0x14, 0xf8, 0x05, 0x3c, 0x51, 0x49, 0x65, 0x65, 0x7e, 0xf0,
	0x77, 0xb7, 0xb4, 0xfa, 0xa8, 0x21, 0xa4, 0x86, 0xf9, 0xaf, 0xc1, 0x1d, 0xaf, 0x5d, 0x77, 0x1f,
	0xee, 0xb5, 0xd7, 0xfc, 0xc7, 0x02, 0xcf, 0x90, 0x30, 0x81, 0x86, 0x7e, 0xc2, 0x73, 0xb1, 0x34,
	0xcd, 0xed, 0x68, 0x78, 0xa7, 0x6c, 0xe1, 0x88, 0xd1, 0xf4, 0x5c, 0x2c, 0x19, 0xd9, 0x9f, 0xd5,
	0x5f, 0xd7, 0xfc, 0x05, 0x36, 0xe9, 0xec, 0xcb, 0xe9, 0x82, 0x17, 0xb0, 0xbf, 0x66, 0xe0, 0x11,
	0xb4, 0xd6, 0xdf, 0xf1, 0xd9, 0xe9, 0x70, 0x72, 0x78, 0x0f, 0x11, 0xda, 0x17, 0x12, 0x19, 0x7f,
	0x18, 0x4d, 0x0e, 0xad, 0xe8, 0x2b, 0x74, 0xb6, 0x42, 0x7e, 0x66, 0xe5, 0x32, 0x4b, 0x18, 0x0e,
	0x01, 0x36, 0xab, 0x01, 0x8f, 0xaf, 0x0e, 0xb6, 0xb3, 0x36, 0xfc, 0x87, 0x57, 0x8f, 0xe8, 0x0d,
	0x31, 0xf5, 0xf4, 0xe6, 0x79, 0xf9, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x9d, 0x3c, 0xbe, 0x53, 0x91,
	0x04, 0x00, 0x00,
}
