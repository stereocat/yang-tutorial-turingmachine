syntax = "proto3";
// Automatically generated by goyang https://github.com/openconfig/goyang
// compiled 2018-04-20T09:25:54Z
// do not delete the next line
// goyang-version 1
// module "turing-machine"
// revision "2013-12-27"
// namespace "http://example.net/turing-machine"

// Data model for the Turing Machine.
package turing_machine;
service TuringMachineRpc {
  rpc Configure (Config) returns (Empty);
  rpc Initialize (InitializeRequest) returns (Empty);
  rpc Run (Empty) returns (Empty);
}
message InitializeRequest {
  // The string with which the tape shall be initialized. The
  // leftmost symbol will be at tape coordinateÂ 0.
  string tape_content = 1;
}

message Empty { }

// The Turing Machine has halted. This means that there is no
// transition rule for the current state and tape symbol.
message Halted {
  // The state of the control unit in which the machine has
  // halted.
  uint32 state = 1;
}

// Start the Turing Machine operation.
message Run {
}

// Config data
message Config {
  // @inject_tag: xml:"xmlns,attr"
  string xmlns = 1;
  // @inject_tag: xml:"turing-machine"
  TuringMachine turing_machine = 2;
}

// Move the head one cell to the left or right
enum HeadMove {
  LEFT = 0;
  RIGHT = 1;
};

// State data and configuration of a Turing Machine.
message TuringMachine {
  // Position of tape read/write head.
  // @inject_tag: xml:"head-position"
  int64 head_position = 1;
  // Current state of the control unit.
  // The initial state is 0.
  // @inject_tag: xml:"state"
  uint32 state = 2;
  // The contents of the tape.
  message Tape {
    // List of non-blank cells.
    message Cell {
      // Coordinate (index) of the tape cell.
      // @inject_tag: xml:"coord"
      int64 coord = 1;
      // Symbol appearing in the tape cell.
      // Blank (empty string) is not allowed here because the
      // 'cell' list only contains non-blank cells.
      // @inject_tag: xml:"symbol"
      string symbol = 2;
    }
    // @inject_tag: xml:"cell"
    repeated Cell cell = 1;
  }
  // @inject_tag: xml:"tape"
  Tape tape = 3;
  // The Turing Machine is configured by specifying the
  // transition function.
  message TransitionFunction {
    // The list of transition rules.
    message Delta {
      // Input parameters (arguments) of the transition rule.
      message Input {
        // Current state of the control unit.
        // @inject_tag: xml:"state"
        uint32 state = 1;
        // Symbol read from the tape cell.
        // @inject_tag: xml:"symbol"
        string symbol = 2;
      }
      // @inject_tag: xml:"input"
      Input input = 1;
      // An arbitrary label of the transition rule.
      // @inject_tag: xml:"label"
      string label = 2;
      // Output values of the transition rule.
      message Output {
        // HeadMove head_move = 1;
        // @inject_tag: xml:"head-move"
        string head_move = 1;
        // New state of the control unit. If this leaf is not
        // present, the state doesn't change.
        // @inject_tag: xml:"state"
        uint32 state = 2;
        // Symbol to be written to the tape cell. If this leaf is
        // not present, the symbol doesn't change.
        // @inject_tag: xml:"symbol"
        string symbol = 3;
      }
      // @inject_tag: xml:"output"
      Output output = 3;
    }
    // @inject_tag: xml:"delta"
    repeated Delta delta = 1;
  }
  // @inject_tag: xml:"transition-function"
  TransitionFunction transition_function = 4;
}

// Do not delete the lines below, they preserve tag information for goyang.
// goyang-tag Halted state/uint32 1
// goyang-tag Initialize_InitializeRequest tape_content/string 1
// goyang-tag TuringMachine head_position/int64 1
// goyang-tag TuringMachine state/uint32 2
// goyang-tag TuringMachine tape/Tape 3
// goyang-tag TuringMachine transition_function/TransitionFunction 4
// goyang-tag TuringMachine_Tape cell/Cell[] 1
// goyang-tag TuringMachine_Tape_Cell coord/int64 1
// goyang-tag TuringMachine_Tape_Cell symbol/string 2
// goyang-tag TuringMachine_TransitionFunction delta/Delta[] 1
// goyang-tag TuringMachine_TransitionFunction_Delta input/Input 1
// goyang-tag TuringMachine_TransitionFunction_Delta label/string 2
// goyang-tag TuringMachine_TransitionFunction_Delta output/Output 3
// goyang-tag TuringMachine_TransitionFunction_Delta_Input state/uint32 1
// goyang-tag TuringMachine_TransitionFunction_Delta_Input symbol/string 2
// goyang-tag TuringMachine_TransitionFunction_Delta_Output head_move/HeadMove 1
// goyang-tag TuringMachine_TransitionFunction_Delta_Output state/uint32 2
// goyang-tag TuringMachine_TransitionFunction_Delta_Output symbol/string 3
